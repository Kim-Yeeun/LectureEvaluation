/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-03-09 05:51:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import univ.BoardEntity;
import java.text.SimpleDateFormat;

public final class listboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("univ.BoardEntity");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"content-Type\" content=\"text/html; charset=EUC-KR\">\n");
      out.write("<title> 게시판 기본 예제 : 게시 목록 표시 </title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<h2> 게시판 목록 표시 프로그램 </h2>\n");
      out.write("<hr>\n");
      out.write("<center>\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t");
      univ.BoardDBCP brddb = null;
      brddb = (univ.BoardDBCP) _jspx_page_context.getAttribute("brddb", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (brddb == null){
        brddb = new univ.BoardDBCP();
        _jspx_page_context.setAttribute("brddb", brddb, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      out.write('	');

		ArrayList<BoardEntity> list = brddb.getBoardList();
		int counter = list.size();
		int row = 0;
		
		if (counter > 0) {
	
      out.write("\n");
      out.write("\t<table width=800 border=0 cellpadding=1 cellspacing=3>\n");
      out.write("\t\n");
      out.write("\t<tr>\n");
      out.write("\t\t<th> <font color=blue><b> 번호 </b></font> </th>\n");
      out.write("\t\t<th> <font color=blue><b> 제목 </b></font> </th>\n");
      out.write("\t\t<th> <font color=blue><b> 작성자 </b></font> </th>\n");
      out.write("\t\t<th> <font color=blue><b> 작성일 </b></font> </th>\n");
      out.write("\t\t<th> <font color=blue><b> 전자메일 </b></font> </th>\n");
      out.write("\t</tr>\n");
      out.write("\t");

		SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		for (BoardEntity brd : list) {
			String color = "papayawhip";
			if (++row % 2 == 0)
				color = "white";
	
      out.write("\n");
      out.write("\t<tr bgcolor=");
      out.print( color );
      out.write("\n");
      out.write("\t\tonmouseover = \"this.style.backgroundColor='SkyBlue'\"\n");
      out.write("\t\tonmouseout = \"this.style.backgroundColor='");
      out.print(color );
      out.write("'\">\n");
      out.write("\t\t<td align=center> <a href=\"editboard.jsp?id=");
      out.print( brd.getId() );
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print( brd.getId() );
      out.write(" </a> </td>\n");
      out.write("\t\t<td align=left> ");
      out.print( brd.getTitle() );
      out.write(" </td>\n");
      out.write("\t\t<td align=center> ");
      out.print( brd.getName() );
      out.write(" </td>\n");
      out.write("\t\t<td align=center> ");
      out.print( df.format(brd.getRegdate()) );
      out.write(" </td>\n");
      out.write("\t\t<td align=center> ");
      out.print( brd.getEmail() );
      out.write(" </td>\n");
      out.write("\t</tr>\n");
      out.write("\t");

	}
	
      out.write("\n");
      out.write("\t</table>\n");

}

      out.write("\n");
      out.write("<hr width=90%>\n");
      out.write("<p> 조회된 게시판 목록 수가 ");
      out.print( counter );
      out.write(" 개 입니다.\n");
      out.write("</center> <hr>\n");
      out.write("<center>\n");
      out.write("<form name=form method=post action=editboard.jsp>\n");
      out.write("\t<inout type=submit value=\"게시등록\">\n");
      out.write("</form>\n");
      out.write("</center>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
